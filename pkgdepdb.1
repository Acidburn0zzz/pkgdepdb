.\"mdoc
.Dd June 6, 2013
.Dt PKGDEPDB 1
.Os
.Sh NAME
.Nm pkgdepdb
.Nd read Arch package archive files, and print the required library names
.Sh SYNOPSIS
.Nm readelf
.Op Cm options
.Op Ar files...
.Pp
.Nm readelf
.Fl r
.Op Cm options
.Ar package_names...
.Sh DESCRIPTION
This tool is helpful to find library dependencies of packages without
unpacking or installing them to a temporary location. It reads through
the archive file, optionally parses a .PKGINFO file if one is
encountered, and then prints a list of required libraries of each ELF
file contained in the library.
.Pp
Additionally it can manage a dependency database. In this mode it
performs a virtual installation of a package's binaries and libraries
into a database, in which only the dependency lists is maintained.
.Sh OPTIONS
.Bl -tag -width Ds
.It Fl h , Fl -help
Show the usage message.
.It Fl -version
Show version info.
.It Fl d , Fl -db= Ns Ar file
Specifies the database filename to use. If it exists it will be read,
otherwise a new database will be put into place.
.Pp
If the filename ends in
.Cm .gz
then gzip compression will be used.
.It Fl i , Fl -install
Install mode: commit (install) the provided package files into the
database.
.It Fl r , Fl -remove
Delete mode: delete (uninstall) the listed packages from the database.
In this mode, the non-option parameters are package names, not package
archive files!
.It Fl n , Fl -rename= Ns Ar name
Change the database's contained name. This does not affect the
filename. The database-name is currently not used anywhere except when
using the -I option to show it.
.It Fl -dry
Dry run: do not commit the changes to the database file.
.It Fl v , Fl -verbose
Increase the verbosity level. May be specified multiple times. Default
verbosity level is 0.
.It Fl q , Fl -quiet
Not the opposite of
.Fl v
but rather disables progress-messages.
.El
.Pp
The following query options are available:
.Bl -tag -width Ds
.It Fl I , Fl -info
Show some general information about the database: The database format
version and the database's name.
.It Fl L , Fl -list
Show the list of installed binaries and libraries and the dependencies
they find or lack.
.It Fl M , Fl -missing
Show the list of missing files grouped by binary/library files.
.It Fl F , Fl -found
For all binaries and libraries, show which files are found
successfully.
.It Fl P , Fl -pkgs
Show a list of installed packages. With
.Fl v
the list of contained object files is shown for each package as well.
.El
.Pp
The following query filters are available:
.Bl -tag -width Ds
.It Fl b , Fl -broken
Filter for: -P
.br
Only show packages with broken libraries.
.br
Changes the behavior of
.Fl v
to only show libraries with missing files as well.
Verbosity level 2
.Po Fl vv Pc
can be used to show the list of missing libraries for each broken
library.
.El
.Pp
The following options are used to modify the library search paths used
by the database. The database file will only be updated if an actual
change appears.
.Pp
Directories can only exist once in the path. When adding an already
existing path to the list, the old path will be moved by reordering.
.Pp
.Em IMPORTANT:
Changes to the library path do not cause link information
to be updated. Especially prepending/inserting or deleting library
paths can have huge effects on which libraries will be used by which
object, so in order to keep a consistent state, use the
.Fl -relink
option after changing library paths.
.Bl -tag -width Ds
.It Fl -relink
Recreate the complete link information with the updated library paths.
.It Fl -ld-append= Ns Ar dir
Add to the end of the list.
.It Fl -ld-prepend= Ns Ar dir
Prepend to the front of the list.
.It Fl -ld-delete= Ns Ar dir
Delete from the list.
.It Fl -ld-insert= Ns Ar pos Ns : Ns Ar dir
Insert the directory at the specified index.
.It Fl -ld-clear
Remove all paths from the db.
.El
.Sh EXAMPLES
When no database or database-action is specified, the provided archive
files are read, and for each ELF object (binary or library) a list of
required libraries is printed. This is similar to using
.Cm readelf Fl d
on the contents while grepping for
.Ql NEEDED Ns .
.Bd -literal -offset indent
$ pkgdepdb /var/cache/pacman/pkg/lua-5.2.1-4-x86_64.pkg.tar.xz
lua : /usr/lib/liblua.so NEEDS libm.so.5
lua : /usr/lib/liblua.so NEEDS libc.so.7
(...)
.Ed
.Pp
When a database is provided with the
.Fl d
switch, database related actions can be performed, such as installing
packages, querying, or modifying the library path used in the DB.
.Pp
Here's an example which updates or creates a database:
.Bd -literal -offset indent
$ pkgdepdb -d dep.core.db.gz -i freebsd-world-9.1-4-x86_64.pkg.tar.xz
*** loading packages...
  freebsd-world-9.1-4-x86_64.pkg.tar.xz
*** packages loaded...
*** installing packages
*** writing compressed database
$
.Ed
.Pp
The created file can be queried for various information, like a list
of packages or a list of missing libraries:
.Bd -literal -offset indent
$ pkgdepdb -d dep.core.db.gz -P
*** reading compressed database
Packages:
  -> freebsd-world - 9.1-4
.Ed
.Bd -literal -offset indent
$ pkgdepdb -d dep.core.db.gz -M
*** reading compressed database
Missing:
  -> /usr/bin / gperf
    misses: libstdc++.so.6
  -> /usr/bin / grodvi
    misses: libstdc++.so.6
(...)
.Ed
.Sh BUGS
Currently symlinks are treated as file-copies, and they are followed
at package-load time, this means that there cannot be cross-package
library-symlinks.
.Pp
Symlinks aren't kept in the database either, so broken symlinks are
silently ignored.
.Pp
Support to store symlinks permanently in the database should be added
at some point.
.Pp
The current behavior should work fine in most cases, as packages
rarely link to files from other packages.
.Sh AUTHOR
See <http://github.com/Blub/pkgdepdb>.
